@{
    ViewBag.Title = "Doctor Diary";
}

<style>
    .autocomplete {
        position: relative;
        display: inline-block;
    }

    .autocomplete-items {
        position: absolute;
        border: 1px solid #d4d4d4;
        border-bottom: none;
        border-top: none;
        z-index: 99;
        /*position the autocomplete items to be the same width as the container:*/
        top: 100%;
        left: 0;
        right: 0;
    }

        .autocomplete-items div {
            padding: 10px;
            cursor: pointer;
            background-color: #fff;
            border-bottom: 1px solid #d4d4d4;
        }

            /*when hovering an item:*/
            .autocomplete-items div:hover {
                background-color: #e9e9e9;
            }

    /*when navigating through the items using the arrow keys:*/
    .autocomplete-active {
        background-color: DodgerBlue !important;
        color: #ffffff;
    }
</style>

<section class="section section-search">
    <div class="container-fluid">
        <div class="banner-wrapper">
            <div class="banner-header text-center">
                <h1>Search Doctor, Make an Appointment</h1>
                <p>Discover the best doctors, clinic & hospital the city nearest to you.</p>
            </div>

            <!-- Search -->
            <div class="search-box row justify-content-md-center p-2">
                <form>
                    <div class="form-group search-info">
                        <input id="inDoctor" type="text" class="form-control" placeholder="Search Doctors">
                        <span class="form-text">Ex : Aja...</span>
                        <input id="DoctorId" type="hidden" value="" />
                    </div>
                    <button type="button" class="btn btn-primary search-btn" onclick="doctorApppointment()"><i class="fas fa-search"></i> <span>Search</span></button>
                    <button type="button" class="btn btn-primary search-btn ml-2" onclick="CreateLink()"><i class="fas fa-user-edit"></i> <span>Create Link</span></button>

                </form>
            </div>
            <!-- /Search -->

        </div>
    </div>
</section>


<div class="modal fade" id="createLinkModal" tabindex="-1" role="dialog" aria-labelledby="createLinkModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Send this link to patient for booking Appointment.</h5>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="form-group">
                            <input class="form-control" type="text" id="appointment_link" value="">
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-primary" type="button" data-dismiss="modal" data-original-title="" title="">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts{

    <script>

        var doctors = [];
        $(window).on('load', function () {

            //$.ajax({
            //    url: "/Home/GetDoctors",
            //    method: "GET",
            //    data: {},
            //    dataType: "json",
            //    success: function (data) {

            //        doctors = JSON.parse(data);

            //        autocomplete(document.getElementById("inDoctor"), doctors);

            //    },
            //    error: function (err) {
            //        //alert(err);
            //    }
            //});

            //$("#inDoctor").blur(function () {

            //    var val = $(this).val();

            //    $.ajax({
            //        url: "/Home/GetDoctors",
            //        method: "GET",
            //        data: { str: val },
            //        dataType: "json",
            //        success: function (data) {

            //            doctors = JSON.parse(data);

            //            if (doctors.length == 1) {

            //                $("#DoctorId").val(doctors[0].DoctorId_Encrypt);

            //            }
            //            else {

            //                $("#inDoctor").trigger("input");

            //            }
            //        },
            //        error: function (err) {
            //            //alert(err);
            //        }
            //    });

            //    //alert($(this).val());

            //});


            autocomplete(document.getElementById("inDoctor"), []);
        });

        function doctorApppointment(e) {

            //$("#inDoctor").trigger("focusout");

            var id = $("#DoctorId").val();

            if (id == "") {

                var value = $("#inDoctor").val();

                if (value != "") {
                    $.ajax({
                        url: "/Home/GetDoctors",
                        method: "GET",
                        data: { str: value },
                        dataType: "json",
                        success: function (data) {

                            doctors = JSON.parse(data);

                            if (doctors.length == 1) {

                                $("#DoctorId").val("");

                                window.location.href = '/Home/Appointment?id=' + doctors[0].DoctorId_Encrypt;
                            }
                            else {

                                autocomplete(document.getElementById("inDoctor"), doctors);

                                $("#inDoctor").trigger("keydown", [value]);

                            }
                        },
                        error: function (err) {
                            //alert(err);
                        }
                    });
                }

                return false;
            }
            else {
                window.location.href = '/Home/Appointment?id=' + id;

                return true;
            }
        }



        function CreateLink(e) {

            var id = $("#DoctorId").val();

            if (id == "") {

                var value = $("#inDoctor").val();

                if (value != "") {
                    $.ajax({
                        url: "/Home/GetDoctors",
                        method: "GET",
                        data: { str: value },
                        dataType: "json",
                        success: function (data) {

                            doctors = JSON.parse(data);

                            if (doctors.length == 1) {

                                var host = window.location.origin;
                                var link = host + "/Home/Booking?doctorId=" + doctors[0].DoctorId_Encrypt;

                                $("#appointment_link").val(link);

                                $("#createLinkModal").modal('show');
                            }
                            else {

                                autocomplete(document.getElementById("inDoctor"), doctors);

                                $("#inDoctor").trigger("keydown", [value]);

                            }
                        },
                        error: function (err) {
                            //alert(err);
                        }
                    });
                }
                return false;
            }
            else {

                var host = window.location.origin;
                var link = host + "/Home/Booking?doctorId=" + id;

                $("#appointment_link").val(link);

                $("#createLinkModal").modal('show');
            }
        }

        function autocomplete(inp, arr) {
            /*the autocomplete function takes two arguments,
            the text field element and an array of possible autocompleted values:*/
            var currentFocus;
            /*execute a function when someone writes in the text field:*/
            inp.addEventListener("input", function (e) {
                var a, b, i, val = this.value;
                /*close any already open lists of autocompleted values*/
                closeAllLists();
                if (!val) { return false; }
                currentFocus = -1;
                /*create a DIV element that will contain the items (values):*/
                a = document.createElement("DIV");
                a.setAttribute("id", this.id + "autocomplete-list");
                a.setAttribute("class", "autocomplete-items");
                /*append the DIV element as a child of the autocomplete container:*/
                this.parentNode.appendChild(a);
                /*for each item in the array...*/
                if (val.length > 2) {

                    $.ajax({
                        url: "/Home/GetDoctors",
                        method: "GET",
                        data: { str: val },
                        dataType: "json",
                        success: function (data) {

                            doctors = JSON.parse(data);

                            arr = doctors;


                            for (i = 0; i < arr.length; i++) {
                                /*check if the item starts with the same letters as the text field value:*/
                                if (arr[i].Doctor_name.substr(0, val.length).toUpperCase() == val.toUpperCase()) {
                                    /*create a DIV element for each matching element:*/
                                    b = document.createElement("DIV");
                                    /*make the matching letters bold:*/
                                    b.innerHTML = "<strong>" + arr[i].Doctor_name.substr(0, val.length) + "</strong>";
                                    b.innerHTML += arr[i].Doctor_name.substr(val.length);
                                    /*insert a input field that will hold the current array item's value:*/
                                    b.innerHTML += "<input type = 'hidden' id = '" + arr[i].DoctorId_Encrypt + "' value = '" + arr[i].Doctor_name + "' > ";
                                    /*execute a function when someone clicks on the item value (DIV element):*/
                                    b.addEventListener("click", function (e) {
                                        /*insert the value for the autocomplete text field:*/
                                        inp.value = this.getElementsByTagName("input")[0].value;
                                        /*close the list of autocompleted values,
                                        (or any other open lists of autocompleted values:*/

                                        //alert(this.children[1].id);

                                        //window.location.href = '/Home/Appointment/' + this.children[1].id;

                                        $("#DoctorId").val(this.children[1].id);

                                        closeAllLists();
                                    });
                                    a.appendChild(b);
                                }
                            }
                        },
                        error: function (err) {
                            //alert(err);
                        }
                    });

                }
            });
            /*execute a function presses a key on the keyboard:*/
            inp.addEventListener("keydown", function (e) {
                var x = document.getElementById(this.id + "autocomplete-list");
                if (x) x = x.getElementsByTagName("div");
                if (e.keyCode == 40) {
                    /*If the arrow DOWN key is pressed,
                    increase the currentFocus variable:*/
                    currentFocus++;
                    /*and and make the current item more visible:*/
                    addActive(x);
                } else if (e.keyCode == 38) { //up
                    /*If the arrow UP key is pressed,
                    decrease the currentFocus variable:*/
                    currentFocus--;
                    /*and and make the current item more visible:*/
                    addActive(x);
                } else if (e.keyCode == 13) {
                    /*If the ENTER key is pressed, prevent the form from being submitted,*/
                    e.preventDefault();
                    if (currentFocus > -1) {
                        /*and simulate a click on the "active" item:*/
                        if (x) x[currentFocus].click();
                    }
                }
            });
            function addActive(x) {
                /*a function to classify an item as "active":*/
                if (!x) return false;
                /*start by removing the "active" class on all items:*/
                removeActive(x);
                if (currentFocus >= x.length) currentFocus = 0;
                if (currentFocus < 0) currentFocus = (x.length - 1);
                /*add class "autocomplete-active":*/
                x[currentFocus].classList.add("autocomplete-active");
            }
            function removeActive(x) {
                /*a function to remove the "active" class from all autocomplete items:*/
                for (var i = 0; i < x.length; i++) {
                    x[i].classList.remove("autocomplete-active");
                }
            }
            function closeAllLists(elmnt) {
                /*close all autocomplete lists in the document,
                except the one passed as an argument:*/
                var x = document.getElementsByClassName("autocomplete-items");
                for (var i = 0; i < x.length; i++) {
                    if (elmnt != x[i] && elmnt != inp) {
                        x[i].parentNode.removeChild(x[i]);
                    }
                }
            }
            /*execute a function when someone clicks in the document:*/
            document.addEventListener("click", function (e) {
                closeAllLists(e.target);
            });
        }

    </script>
}